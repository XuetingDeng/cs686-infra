name: Nightly Deployment

on:
  schedule:
    - cron: '0 8 * * *'  # CA 0am
  workflow_dispatch:  # manually trigger

jobs:
  deploy-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Deploy Temporary EC2 Instance
        id: deploy
        run: |
          # Deploy an EC2 instance using AWS CLI
          INSTANCE_ID=$(aws ec2 run-instances --image-id ami-05b10e08d247fb927 --count 1 --instance-type t2.micro --key-name qa-machine-key --security-group-ids sg-06b347ae2c3e64278 --subnet-id subnet-015f9419057906f7e --query 'Instances[0].InstanceId' --output text)
          echo "Instance ID: $INSTANCE_ID"
          echo "::set-output name=instance_id::$INSTANCE_ID"

      - name: Get Public IP of EC2 Instance
        run: |
          # Get the public IP address of the newly created EC2 instance
          PUBLIC_IP=$(aws ec2 describe-instances --instance-ids ${{ steps.deploy.outputs.instance_id }} --query 'Reservations[0].Instances[0].PublicIpAddress' --output text)
          echo "EC2 Public IP: $PUBLIC_IP"
          echo "::set-env name=EC2_PUBLIC_IP::$PUBLIC_IP"

      - name: SSH and Deploy Application
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ env.EC2_PUBLIC_IP }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            sudo yum update -y
            sudo yum install docker -y
            sudo systemctl start docker
            sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose

            # clone githut repo
            git clone https://github.com/XuetingDeng/crud-react-node-mySQL-go.git || (cd crud-react-node-mySQL-go && git pull)
            cd crud-react-node-mySQL-go

            docker-compose up -d

      - name: Smoke Test
        run: |
          sleep 60  # Wait for the services to be up and running
          curl http://$EC2_PUBLIC_IP:8800/books  # Change this URL based on your API
          curl http://$EC2_PUBLIC_IP:5173  # Change this URL based on your frontend port

      - name: Cleanup
        if: always()
        run: |
          aws ec2 terminate-instances --instance-ids ${{ steps.deploy.outputs.instance_id }}
          echo "Cleanup completed"